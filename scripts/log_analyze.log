Error: Command failed: python C:\Users\ACHARF~1\AppData\Local\Temp\script_cf68907c-39b3-4aa8-8582-0b8a5a3e869d.py C:\Users\ACHARF~1\AppData\Local\Temp\config_cf68907c-39b3-4aa8-8582-0b8a5a3e869d.ini
2024-05-28 19:45:51.251749: W tensorflow/stream_executor/platform/default/dso_loader.cc:64] Could not load dynamic library 'cudart64_110.dll'; dlerror: cudart64_110.dll not found
2024-05-28 19:45:51.253475: I tensorflow/stream_executor/cuda/cudart_stub.cc:29] Ignore above cudart dlerror if you do not have a GPU set up on your machine.
No model was supplied, defaulted to google-t5/t5-small and revision d769bba (https://huggingface.co/google-t5/t5-small).
Using a pipeline without specifying a model name and revision in production is not recommended.
C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\huggingface_hub\file_download.py:1132: FutureWarning: `resume_download` is deprecated and will be removed in version 1.0.0. Downloads always resume when possible. If you want to force a new download, use `force_download=True`.
  warnings.warn(
2024-05-28 19:46:23.714681: E tensorflow/core/lib/monitoring/collection_registry.cc:81] Cannot register 2 metrics with the same name: /tensorflow/api/enable_tensor_equality
Traceback (most recent call last):
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\utils\import_utils.py", line 1535, in _get_module
    return importlib.import_module("." + module_name, self.__name__)
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\importlib\__init__.py", line 126, in import_module
    return _bootstrap._gcd_import(name[level:], package, level)
  File "<frozen importlib._bootstrap>", line 1050, in _gcd_import
  File "<frozen importlib._bootstrap>", line 1027, in _find_and_load
  File "<frozen importlib._bootstrap>", line 1006, in _find_and_load_unlocked
  File "<frozen importlib._bootstrap>", line 688, in _load_unlocked
  File "<frozen importlib._bootstrap_external>", line 883, in exec_module
  File "<frozen importlib._bootstrap>", line 241, in _call_with_frames_removed
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\models\t5\modeling_tf_t5.py", line 31, in <module>
    from ...activations_tf import get_tf_activation
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\activations_tf.py", line 22, in <module>
    import tf_keras as keras
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\__init__.py", line 3, in <module>
    from tf_keras import __internal__
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\__internal__\__init__.py", line 3, in <module>
    from tf_keras.__internal__ import backend
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\__internal__\backend\__init__.py", line 3, in <module>
    from tf_keras.src.backend import _initialize_variables as initialize_variables
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\__init__.py", line 21, in <module>
    from tf_keras.src import applications
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\applications\__init__.py", line 18, in <module>
    from tf_keras.src.applications.convnext import ConvNeXtBase
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\applications\convnext.py", line 28, in <module>
    from tf_keras.src import backend
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\backend.py", line 35, in <module>
    from tf_keras.src.engine import keras_tensor
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\engine\keras_tensor.py", line 19, in <module>
    from tf_keras.src.utils import object_identity
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\utils\__init__.py", line 53, in <module>
    from tf_keras.src.utils.feature_space import FeatureSpace
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\utils\feature_space.py", line 20, in <module>
    from tf_keras.src.engine import base_layer
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\engine\base_layer.py", line 35, in <module>
    from tf_keras.src.dtensor import lazy_variable
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tf_keras\src\dtensor\lazy_variable.py", line 23, in <module>
    from tensorflow.python.framework import tensor
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tensorflow\python\framework\tensor.py", line 49, in <module>
    _tensor_equality_api_usage_gauge = monitoring.BoolGauge(
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tensorflow\python\eager\monitoring.py", line 356, in __init__
    super(BoolGauge, self).__init__('BoolGauge', _bool_gauge_methods,
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\tensorflow\python\eager\monitoring.py", line 131, in __init__
    self._metric = self._metric_methods[self._label_length].create(*args)
tensorflow.python.framework.errors_impl.AlreadyExistsError: Another metric with the same name already exists.

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\ACHARF~1\AppData\Local\Temp\script_cf68907c-39b3-4aa8-8582-0b8a5a3e869d.py", line 45, in <module>
    summarizer = pipeline("summarization")
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\pipelines\__init__.py", line 906, in pipeline
    framework, model = infer_framework_load_model(
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\pipelines\base.py", line 258, in infer_framework_load_model
    _class = getattr(transformers_module, f"TF{architecture}", None)
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\utils\import_utils.py", line 1526, in __getattr__
    value = getattr(module, name)
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\utils\import_utils.py", line 1525, in __getattr__
    module = self._get_module(self._class_to_module[name])
  File "C:\Users\acharfeddine\AppData\Local\Programs\Python\Python310\lib\site-packages\transformers\utils\import_utils.py", line 1537, in _get_module
    raise RuntimeError(
RuntimeError: Failed to import transformers.models.t5.modeling_tf_t5 because of the following error (look up to see its traceback):
Another metric with the same name already exists.